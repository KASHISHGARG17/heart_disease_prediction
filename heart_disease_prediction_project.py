# -*- coding: utf-8 -*-
"""Heart Diseae Prediction Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QlDZSljnmAs74Q6eQLYCHjvQnqBgTVad
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/heart.csv')

heart_data.head()

heart_data.shape # no of rows and cols

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()

x = heart_data.drop(columns = 'target',axis = 1)
y = heart_data['target']

print(x)

print(y)

x_train ,x_test,y_train,y_test = train_test_split(x,y,test_size =0.2,stratify = y ,random_state = 2)

print(x.shape,x_train.shape,x_test.shape)

"""MODEL TRAINING"""

model = LogisticRegression()

model.fit(x_train,y_train)

"""MODEL EVALUATION

"""

x_train_prediction = model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction,y_train)
print('Accuracy on trainig data:', training_data_accuracy)

x_test_prediction = model.predict(x_test)
training_data_accuracy = accuracy_score(x_test_prediction,y_test)
print('Accuracy on test data:', training_data_accuracy)

"""Building a Predictive System

"""

input_data= (62,0,0,138,294,1,1,106,0,1.9,1,2,3)

# change the input to numpy array
input_data_as_numpy_array = np.asarray(input_data)

#reshape the numpy array as we are predicting for only one instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)
if(prediction[0]==0):
  print('The Person Does Not Have a Heart Disease')
else:
  print('The Person Has a Heart Disease')